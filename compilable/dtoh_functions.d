/*
REQUIRED_ARGS: -HC -c -o-
PERMUTE_ARGS:
TEST_OUTPUT:
---
// Automatically generated by Digital Mars D Compiler v$n$

#pragma once

#include <assert.h>
#include <stddef.h>
#include <stdio.h>
#include <string.h>

#define _d_void void
#define _d_bool bool
#define _d_byte signed char
#define _d_ubyte unsigned char
#define _d_short short
#define _d_ushort unsigned short
#define _d_int int
#define _d_uint unsigned
#define _d_long $?:32=long long|64=long$
#define _d_ulong unsigned $?:32=long long|64=long$
#define _d_float float
#define _d_double double
#define _d_real long double
#define _d_char char
#define _d_wchar wchar_t
#define _d_dchar unsigned
typedef _d_long d_int64;

#define _d_null NULL


// Parsing module dtoh_functions
// ignoring function dtoh_functions.foo because of linkage
// ignoring function dtoh_functions.fun because it's extern
// ignoring function dtoh_functions.fun2 because it's extern
extern "C" _d_int bar(_d_int x);

extern "C" _d_int bar2(_d_int x);

extern "C" _d_int bar4(_d_int x = 42);

extern _d_int baz(_d_int x);

extern _d_int baz2(_d_int x);

extern _d_int baz3(_d_int x = 42);
---
*/

int foo(int x)
{
    return x * 42;
}

extern (C) int fun();
extern (C++) int fun2();

extern (C) int bar(int x)
{
    return x * 42;
}

extern (C) static int bar2(int x)
{
    return x * 42;
}

extern (C) private int bar3(int x)
{
    return x * 42;
}

extern (C) int bar4(int x = 42)
{
    return x * 42;
}

extern (C++) int baz(int x)
{
    return x * 42;
}

extern (C++) static int baz2(int x)
{
    return x * 42;
}

extern (C++) private int baz3(int x)
{
    return x * 42;
}

extern (C++) int baz3(int x = 42)
{
    return x * 42;
}
